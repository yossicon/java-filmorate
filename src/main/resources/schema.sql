DROP TABLE IF EXISTS MPA_RATING CASCADE;
DROP TABLE IF EXISTS GENRES CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS FILMS_GENRES CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS FRIENDSHIP CASCADE;
DROP TABLE IF EXISTS FILM_LIKES CASCADE;

CREATE TABLE IF NOT EXISTS MPA_RATING
(
    RATING_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RATING_NAME varchar(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(200),
    RELEASE_DATE DATE,
    DURATION BIGINT,
    RATING_ID INTEGER REFERENCES MPA_RATING(RATING_ID)
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES
(
    FILM_ID BIGINT REFERENCES FILMS(FILM_ID),
    GENRE_ID INTEGER REFERENCES GENRES(GENRE_ID)
);

CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL VARCHAR(255) NOT NULL,
    LOGIN VARCHAR(255) NOT NULL,
    NAME VARCHAR(255),
    BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP
(
    USER_ID BIGINT REFERENCES USERS(USER_ID),
    FRIEND_ID BIGINT REFERENCES USERS(USER_ID)
);

CREATE TABLE IF NOT EXISTS FILMS_LIKES
(
    FILM_ID BIGINT REFERENCES FILMS(FILM_ID),
    USER_ID BIGINT REFERENCES USERS(USER_ID)
);




